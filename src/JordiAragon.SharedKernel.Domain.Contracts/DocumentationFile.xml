<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JordiAragon.SharedKernel.Domain.Contracts</name>
    </assembly>
    <members>
        <member name="T:JordiAragon.SharedKernel.Domain.Contracts.Interfaces.IDomainEvent">
            <summary>
            The Domain Event is an event that occurs within the problem domain (living inside a bounded context)
            and is used to communicate a change in the state of the entity.
            This is a private event, not persisted, part of Ubiquitous Language.
            </summary>
        </member>
        <member name="T:JordiAragon.SharedKernel.Domain.Contracts.Interfaces.IDomainEventNotification`1">
            <summary>
            The Domain Event Notification is an event that occurs within the problem domain (living inside a bounded context)
            and is used to communicate a change in the state of the entity or aggregate.
            This is a private event, persisted, part of Ubiquitous Language.
            </summary>
            <typeparam name="TDomainEvent">Source domainEvent.</typeparam>
        </member>
    </members>
</doc>
