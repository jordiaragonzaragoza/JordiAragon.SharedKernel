<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JordiAragon.SharedKernel.Application.Contracts</name>
    </assembly>
    <members>
        <member name="T:JordiAragon.SharedKernel.Application.Contracts.Interfaces.IApplicationEvent">
            <summary>
            The Application Event is an event that occurs within the problem domain (living inside a bounded context)
            and is used to communicate a change in the state of the aggregate.
            This is a private event, not persisted, part of Ubiquitous Language.
            </summary>
        </member>
        <member name="T:JordiAragon.SharedKernel.Application.Contracts.Interfaces.IApplicationEventNotification`1">
            <summary>
            The Application Event Notification is an event that occurs within the problem domain (living inside a bounded context)
            and is used to communicate a change in the state of the entity or aggregate.
            This is a private event, persisted, part of Ubiquitous Language.
            </summary>
            <typeparam name="TApplicationEvent">Source applicationEvent.</typeparam>
        </member>
        <member name="T:JordiAragon.SharedKernel.Application.Contracts.Interfaces.IApplicationEventNotificationHandler`1">
            <summary>
            Handle the application event out side the source transaction.
            </summary>
            <typeparam name="TApplicationEventNotification">The application event notification.</typeparam>
        </member>
        <member name="T:JordiAragon.SharedKernel.Application.Contracts.Interfaces.IDomainEventNotificationHandler`1">
            <summary>
            Handle the domain event out side the source transaction.
            </summary>
            <typeparam name="TDomainEventNotification">The domain event notification.</typeparam>
        </member>
    </members>
</doc>
