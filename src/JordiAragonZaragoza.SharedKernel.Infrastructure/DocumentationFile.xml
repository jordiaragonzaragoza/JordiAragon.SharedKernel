<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JordiAragonZaragoza.SharedKernel.Infrastructure</name>
    </assembly>
    <members>
        <member name="M:JordiAragonZaragoza.SharedKernel.Infrastructure.InternalBus.EventBus.PublishWithRetryStrategyAsync(JordiAragonZaragoza.SharedKernel.Contracts.Events.IEventNotification,System.Threading.CancellationToken)">
            <summary>
            Publish the event using a retry strategy on errors.
            Using this method requires using idempotent consumers to avoid duplicate procesing.
            </summary>
            <param name="eventNotification">The event.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>An awaitable task.</returns>
        </member>
        <member name="T:JordiAragonZaragoza.SharedKernel.Infrastructure.InternalBus.MediatR.CustomMediator">
            <summary>
            This class is required due to an issue with Autofac, Decorators and .NET DI.
            </summary>
        </member>
    </members>
</doc>
